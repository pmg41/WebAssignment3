// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAssignment3.Data;

#nullable disable

namespace WebAssignment3.Migrations
{
    [DbContext(typeof(WebAss3Context))]
    [Migration("20240325230439_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAssignment3.Data.Cart", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__cart__3213E83F93649115");

                    b.HasIndex(new[] { "ProductId" }, "product_id_index");

                    b.HasIndex(new[] { "UserId" }, "user_id_index");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("WebAssignment3.Data.Comment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__comments__3213E83F8BB07DAC");

                    b.HasIndex(new[] { "ProductId" }, "product_id_index");

                    b.HasIndex(new[] { "UserId" }, "user_id_index");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("WebAssignment3.Data.Order", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("order_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_amount");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__orders__3213E83F8C592554");

                    b.HasIndex(new[] { "UserId" }, "user_id_index");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("WebAssignment3.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<decimal?>("Pricing")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("pricing");

                    b.Property<decimal?>("ShippingCost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("shipping_cost");

                    b.HasKey("Id")
                        .HasName("PK__products__3213E83F618CAB7E");

                    b.HasIndex(new[] { "Id" }, "id_index");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("WebAssignment3.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PurchaseHistory")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("purchase_history");

                    b.Property<string>("ShippingAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shipping_address");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F108FF698");

                    b.HasIndex(new[] { "Id" }, "id_index");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("WebAssignment3.Data.Cart", b =>
                {
                    b.HasOne("WebAssignment3.Data.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("cart_product_fk");

                    b.HasOne("WebAssignment3.Data.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("cart_user_fk");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAssignment3.Data.Comment", b =>
                {
                    b.HasOne("WebAssignment3.Data.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("comments_product_fk");

                    b.HasOne("WebAssignment3.Data.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("comments_user_fk");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAssignment3.Data.Order", b =>
                {
                    b.HasOne("WebAssignment3.Data.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("orders_user_fk");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAssignment3.Data.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("WebAssignment3.Data.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
